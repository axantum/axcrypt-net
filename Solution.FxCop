<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="AxCrypt.NET">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>True</IgnoreGeneratedCode>
  <TargetFrameworkVersion>3.5</TargetFrameworkVersion>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>$(ProjectDir)/Axantum.AxCrypt.Core/bin/Debug/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/Axantum.AxCrypt.Core.Test/bin/Debug/Axantum.AxCrypt.Core.Test.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/Axantum.AxCrypt.Mono.Test/bin/Debug/Axantum.AxCrypt.Mono.Test.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/Axantum.AxCrypt.Mono/bin/Debug/Axantum.AxCrypt.Mono.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/Axantum.AxCrypt/bin/Debug/Axantum.AxCrypt.Core.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/Axantum.AxCrypt/bin/Debug/Axantum.AxCrypt.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Targets>
   <Target Name="$(ProjectDir)/Axantum.AxCrypt/bin/Debug/Axantum.AxCrypt.Core.dll">
    <Modules>
     <Module Name="axantum.axcrypt.core.dll">
      <Namespaces>
       <Namespace Name="Axantum.AxCrypt.Core.Runtime">
        <Types>
         <Type Name="IDelayTimer">
          <Members>
           <Member Name="#Interval">
            <Messages>
             <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Created="2013-12-13 13:48:32Z">
              <Issue Name="AddGetter">
               <Item>'IDelayTimer.Interval'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ISleep">
          <Members>
           <Member Name="#Time(System.TimeSpan)">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719" Created="2013-12-13 13:48:32Z">
              <Issue>
               <Item>'time'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Axantum.AxCrypt.Core.Session">
        <Types>
         <Type Name="ActiveFileComparer+DecryptedNameComparerImpl">
          <Members>
           <Member Name="#Compare(Axantum.AxCrypt.Core.Session.ActiveFile,Axantum.AxCrypt.Core.Session.ActiveFile)">
            <Messages>
             <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-12-13 13:48:32Z">
              <Issue>
               <Item>'string.CompareTo(string)'</Item>
               <Item>'ActiveFileComparer.DecryptedNameComparerImpl.Compare(ActiveFile, ActiveFile)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ActiveFileComparer+EncryptedNameComparerImpl">
          <Members>
           <Member Name="#Compare(Axantum.AxCrypt.Core.Session.ActiveFile,Axantum.AxCrypt.Core.Session.ActiveFile)">
            <Messages>
             <Message Id="System.String.CompareTo(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2013-12-13 13:48:32Z">
              <Issue>
               <Item>'string.CompareTo(string)'</Item>
               <Item>'ActiveFileComparer.EncryptedNameComparerImpl.Compare(ActiveFile, ActiveFile)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Axantum.AxCrypt.Core.UI">
        <Types>
         <Type Name="IUserSettings">
          <Members>
           <Member Name="#Get`1(System.String)">
            <Messages>
             <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-12-13 13:48:32Z">
              <Issue Name="Member">
               <Item>'IUserSettings.Get&lt;T&gt;(string)'</Item>
               <Item>Get</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Get`1(System.String,!!0)">
            <Messages>
             <Message Id="Get" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-12-13 13:48:32Z">
              <Issue Name="Member">
               <Item>'IUserSettings.Get&lt;T&gt;(string, T)'</Item>
               <Item>Get</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Set`1(System.String,!!0)">
            <Messages>
             <Message Id="Set" TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716" Created="2013-12-13 13:48:32Z">
              <Issue Name="Member">
               <Item>'IUserSettings.Set&lt;T&gt;(string, T)'</Item>
               <Item>Set</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="UserSettings">
          <Members>
           <Member Name="#Get`1(System.String,!!0)">
            <Messages>
             <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-12-13 13:48:32Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'Convert.ChangeType(object, Type)'</Item>
               <Item>'UserSettings.Get&lt;T&gt;(string, T)'</Item>
               <Item>'Convert.ChangeType(object, Type, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Get`1(System.String,System.Func`1&lt;!!0&gt;)">
            <Messages>
             <Message Id="System.Convert.ChangeType(System.Object,System.Type)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-12-13 13:48:32Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'Convert.ChangeType(object, Type)'</Item>
               <Item>'UserSettings.Get&lt;T&gt;(string, Func&lt;T&gt;)'</Item>
               <Item>'Convert.ChangeType(object, Type, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-12-13 13:48:32Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'Convert.ToString(object)'</Item>
               <Item>'UserSettings.Get&lt;T&gt;(string, Func&lt;T&gt;)'</Item>
               <Item>'Convert.ToString(object, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Set`1(System.String,!!0)">
            <Messages>
             <Message Id="System.Convert.ToString(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2013-12-13 13:48:32Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'Convert.ToString(object)'</Item>
               <Item>'UserSettings.Set&lt;T&gt;(string, T)'</Item>
               <Item>'Convert.ToString(object, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Axantum.AxCrypt.Core.UI.ViewModel">
        <Types>
         <Type Name="FileSelectionEventArgs">
          <Members>
           <Member Name="#SelectedFiles">
            <Messages>
             <Message TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227" Created="2013-12-13 13:48:32Z">
              <Issue>
               <Item>'FileSelectionEventArgs.SelectedFiles'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="MainViewModel">
          <Members>
           <Member Name="#ClearPassphraseMemory()">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-12-13 13:48:32Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MainViewModel.ClearPassphraseMemory()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogonEnabled">
            <Messages>
             <Message Id="Logon" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2013-12-13 13:48:32Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Logon</Item>
               <Item>'MainViewModel.LogonEnabled'</Item>
               <Item>LogOn</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnLogggingOn(Axantum.AxCrypt.Core.UI.ViewModel.LogOnEventArgs)">
            <Messages>
             <Message Id="Loggging" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2013-12-13 13:48:32Z">
              <Issue Name="Member">
               <Item>Loggging</Item>
               <Item>'MainViewModel.OnLogggingOn(LogOnEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OpenSelectedFolder(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-12-13 13:48:32Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MainViewModel.OpenSelectedFolder(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#PurgeActiveFiles()">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-12-13 13:48:32Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MainViewModel.PurgeActiveFiles()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RemoveRecentFiles(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-12-13 13:48:32Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MainViewModel.RemoveRecentFiles(IEnumerable&lt;string&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#RemoveWatchedFolders(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-12-13 13:48:32Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'MainViewModel.RemoveWatchedFolders(IEnumerable&lt;string&gt;)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UpdateDebugMode(System.Boolean)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2013-12-13 13:48:32Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'MainViewModel.UpdateDebugMode(bool)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="NewPassphraseViewModel">
          <Members>
           <Member Name="#Item[System.String]">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2013-12-13 15:02:10Z">
              <Issue>
               <Item>'NewPassphraseViewModel.this[string]'</Item>
               <Item>'propertyName'</Item>
               <Item>'columnName'</Item>
               <Item>'ViewModelBase.this[string]'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="CollectionPropertiesShouldBeReadOnly" Category="Microsoft.Usage" CheckId="CA2227">
    <Resolution Name="Default">Change {0} to be read-only by removing the property setter.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
    <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotMatchKeywords" Category="Microsoft.Naming" CheckId="CA1716">
    <Resolution Name="Member">Rename virtual/interface member {0} so that it no longer conflicts with the reserved language keyword '{1}'. Using a reserved keyword as the name of a virtual/interface member makes it harder for consumers in other languages to override/implement the member.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
    <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   </Rule>
   <Rule TypeName="ParameterNamesShouldNotMatchMemberNames" Category="Microsoft.Naming" CheckId="CA1719">
    <Resolution Name="Default">Change either member or parameter name {0} so that one differs from the other.</Resolution>
   </Rule>
   <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
    <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
