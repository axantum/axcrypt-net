<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="Build"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <UseHostCompilerIfAvailable>false</UseHostCompilerIfAvailable>

        <_AxSignToolPath>..\signtool.exe</_AxSignToolPath>
        <_AxIsAxantumBuild>true</_AxIsAxantumBuild>
        <_AxBuildserverDistinguishingPath>C:\Build</_AxBuildserverDistinguishingPath>
        <_AxIsBuildServerBuild>false</_AxIsBuildServerBuild>
        <_AxIsBuildServerBuild Condition=" Exists('$(_AxBuildserverDistinguishingPath)') ">true</_AxIsBuildServerBuild>
        <_AxTimeStampUrl>http://timestamp.comodoca.com/authenticode</_AxTimeStampUrl>
        <_AxCertificateThumbprint>f19b4539765c80c0a1e56586132b06d5a96a2400</_AxCertificateThumbprint>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(_AxIsBuildServerBuild)' == 'true' ">
        <_AxIgnoreSignToolErrors>false</_AxIgnoreSignToolErrors>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(_AxIsBuildServerBuild)' == 'false' ">
        <_AxIgnoreSignToolErrors>true</_AxIgnoreSignToolErrors>
    </PropertyGroup>

    <!-- Use the parameter AxAuthenticodeFile to determine the file name. -->
    <Target Name="AxAuthenticodeSignOneFile">
        <Exec Command="&quot;$(_AxSignToolPath)&quot; sign /sha1 $(_AxCertificateThumbprint) /sm /v /t &quot;$(_AxTimeStampUrl)&quot; &quot;$(AxAuthenticodeFile)&quot; &gt;nul"
              Condition=" '$(Configuration)' == 'Release' And Exists('$(_AxSignToolPath)') "
              ContinueOnError="true">
            <Output TaskParameter="ExitCode"
                    PropertyName="_AxExitCode" />
        </Exec>
        <!-- Retry once if there's an error we're not ignoring errors-->
        <Exec Command="&quot;$(_AxSignToolPath)&quot; sign /sha1 $(_AxCertificateThumbprint) /sm /v /t &quot;$(_AxTimeStampUrl)&quot; &quot;$(AxAuthenticodeFile)&quot; &gt;nul"
              Condition=" '$(Configuration)' == 'Release' And Exists('$(_AxSignToolPath)') And '$(_AxExitCode)' != '0' And '$(_AxIgnoreSignToolErrors)' == 'false' "
              ContinueOnError="true">
            <Output TaskParameter="ExitCode"
                    PropertyName="_AxExitCode" />
        </Exec>
        <!-- Retry again if there's an error we're not ignoring errors-->
        <Exec Command="&quot;$(_AxSignToolPath)&quot; sign /sha1 $(_AxCertificateThumbprint) /sm /v /t &quot;$(_AxTimeStampUrl)&quot; &quot;$(AxAuthenticodeFile)&quot; &gt;nul"
              Condition=" '$(Configuration)' == 'Release' And Exists('$(_AxSignToolPath)') And '$(_AxExitCode)' != '0' And '$(_AxIgnoreSignToolErrors)' == 'false' "
              ContinueOnError="true">
            <Output TaskParameter="ExitCode"
                    PropertyName="_AxExitCode" />
        </Exec>
        <!-- Really fail if we're still in error, and we're not ignoring errors. -->
        <Error Text="Authenticode signing failed even after three retries."
               Condition=" '$(_AxExitCode)' != 0 And '$(_AxIgnoreSignToolErrors)' == 'false' " />
        <Message Text="$(MSBuildProjectName) -> Authenticode signed $(AxAuthenticodeFile)"
                 Importance="high" />
    </Target>

    <UsingTask TaskName="HgVersionFile"
               AssemblyFile="..\MSBuildVersioning.dll" />

    <Target Name="_AxMergeAndSign"
            Inputs="$(MSBuildProjectFullPath);@(MainAssembly);@(IlmergeAssemblies)"
            Outputs="$(OutputPath)AxCrypt.exe"
            Condition=" '$(Configuration)' == 'Release' ">
        <Exec Command="&quot;..\Ilmerge.exe&quot; /attr:&quot;@(MainAssembly)&quot; /targetplatform:v4,&quot;$(ProgramFiles)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0\Profile\Client&quot; /out:$(OutputPath)AxCrypt.exe &quot;@(MainAssembly)&quot; @(IlmergeAssemblies->'&quot;%(FullPath)&quot;', ' ')" />
        <MSBuild Projects="$(MSBuildProjectFullPath)"
                 Targets="AxAuthenticodeSignOneFile"
                 Properties="AxAuthenticodeFile=$(OutputPath)AxCrypt.exe"/>
    </Target>

    <Target Name="_AxFindIlMergeAssemblies">
        <CreateItem Include="@(ReferencePath)"
                    Condition="'%(CopyLocal)'=='true'">
            <Output TaskParameter="Include"
                    ItemName="IlmergeAssemblies" />
        </CreateItem>
    </Target>

    <Target Name="_AxFixupVersion"
            Inputs="Properties\AssemblyInfo.template;$(MSBuildProjectFullPath)"
            Outputs="Properties\AssemblyInfo.cs">
        <HgVersionFile TemplateFile="Properties\AssemblyInfo.template"
                       DestinationFile="Properties\AssemblyInfo.cs"
                       IgnoreToolNotFound="true" />
    </Target>

    <Target Name="_AxBeforeBuild"
            DependsOnTargets="_AxFixupVersion">
    </Target>

    <Target Name="_AxAfterBuild"
            DependsOnTargets="_AxFindIlMergeAssemblies;_AxMergeAndSign">
    </Target>

    <PropertyGroup>
        <BuildDependsOn>
            _AxBeforeBuild;
            $(BuildDependsOn);
            _AxAfterBuild
        </BuildDependsOn>
    </PropertyGroup>
</Project>